#pragma once
#ifndef BUFFER_H
#define BUFFER_H

#include "Device.h"
#include "udpstreamer.h"
#include <vector>
#include <mutex>
#include <alsa/asoundlib.h>

/**
 * @class Buffer
 * @brief –Ø–¥—Ä–æ –∞—É–¥–∏–æ-–ø–æ—Ç–æ–∫–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–∏—Ä–∫—É–ª—è—Ä–Ω—ã–º –±—É—Ñ–µ—Ä–æ–º
 *
 * üîπ –ß—Ç–µ–Ω–∏–µ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ -> –ë—É—Ñ–µ—Ä -> –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ UDP
 * üîπ –ü—Ä–∏–µ–º –ø–æ UDP -> –ë—É—Ñ–µ—Ä -> –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
 *
 * –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
 * - –ü–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø (std::mutex)
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö ALSA
 * - –¶–∏—Ä–∫—É–ª—è—Ä–Ω—ã–π –±—É—Ñ–µ—Ä –Ω–∞ 8 –ø–µ—Ä–∏–æ–¥–æ–≤
 */
class Buffer {
public:
    Buffer(const Device& capture_device,
           const Device& playback_device,
           UdpStreamer& udp);

    // –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ—Ä–µ–π–º–æ–≤)
    snd_pcm_sframes_t ReadFromDevice();    // üé§ -> üì¶
    snd_pcm_sframes_t SendToUDP();         // üì¶ -> üåç
    snd_pcm_sframes_t ReceiveFromUDP();    // üåç -> üì¶
    snd_pcm_sframes_t WriteToDevice();     // üì¶ -> üîä

private:
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    const Device& captureDevice_;   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞—Ö–≤–∞—Ç–∞ (–º–∏–∫—Ä–æ—Ñ–æ–Ω)
    const Device& playbackDevice_;  // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–¥–∏–Ω–∞–º–∏–∫)
    UdpStreamer& gateway_;          // UDP —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä

    // –¶–∏—Ä–∫—É–ª—è—Ä–Ω—ã–π –±—É—Ñ–µ—Ä
    std::vector<char> buffer_;      // üì¶ –î–∞–Ω–Ω—ã–µ –∞—É–¥–∏–æ
    size_t bufferSize_;             // –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –±—É—Ñ–µ—Ä–∞ (–≤ –±–∞–π—Ç–∞—Ö)
    size_t frameSize_;              // –†–∞–∑–º–µ—Ä —Ñ—Ä–µ–π–º–∞ (–≤ –±–∞–π—Ç–∞—Ö)
    size_t framesPerPeriod_;        // –§—Ä–µ–π–º–æ–≤ –≤ –ø–µ—Ä–∏–æ–¥–µ ALSA

    // –ü–æ–∑–∏—Ü–∏–∏ –≤ –±—É—Ñ–µ—Ä–µ
    size_t writeInBufPosition_;     // üé§ –ü–æ–∑–∏—Ü–∏—è –∑–∞–ø–∏—Å–∏ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
    size_t writeFromUdpPosition_;   // üåç –ü–æ–∑–∏—Ü–∏—è –∑–∞–ø–∏—Å–∏ —Å UDP
    size_t writeInAlsaPosition_;    // üîä –ü–æ–∑–∏—Ü–∏—è —á—Ç–µ–Ω–∏—è –¥–ª—è ALSA

    std::mutex bufferMutex_;        // üîí –ó–∞—â–∏—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±—É—Ñ–µ—Ä—É

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    int format_to_bytes(snd_pcm_format_t format);
    void ErrorHandler(int err, snd_pcm_stream_t stream_type);
};

#endif // BUFFER_H
